{"version":3,"sources":["components/Theme.js","components/Titlebar.js","components/CompInput.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","Titlebar","Box","bgcolor","width","textAlign","display","flexDirection","justifyContent","alignContent","height","color","p","my","fontSize","fontFamily","fontWeight","CompInput","props","click","checked","FormControl","component","FormGroup","aria-label","row","FormControlLabel","id","value","control","Checkbox","label","labelPlacement","onClick","Input","handleKeyPress","input","setinput","isComp","comp","addToList","Grid","onKeyPress","container","direction","justify","alignItems","noValidate","autoComplete","TextField","required","onChange","event","target","variant","margin","Button","size","useStyles","makeStyles","root","flexGrow","paper","text","background","padding","App","useState","localStorage","getItem","JSON","parse","list","setlist","setcomp","length","setid","some","x","task","alert","temp","concat","useEffect","jsonList","stringify","Storage","setItem","store","classes","style","backgroundColor","e","key","preventDefault","className","map","listItem","borderRadius","item","index","findIndex","newList","slice","isCompleted","updateComps","alignSelf","filter","deleteItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1036e4b8.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: '#3f50b5',\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport theme from './Theme';\r\n\r\n\r\nexport default function Titlebar() {\r\n  return (\r\n    <Box bgcolor={theme.palette.primary.light} width=\"100%\" textAlign=\"center\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignContent=\"center\">\r\n      <Box bgcolor={theme.palette.primary.main} width=\"100%\" height=\"20px\" />\r\n      <Box color='white' width=\"auto\" height=\"30px\" p={2} my={0.5} fontSize=\"40px\" fontFamily=\"Arial\" fontWeight=\"bold\">\r\n        Todo-List\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function CompInput(props) {\r\n    const { click, checked } = props;\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormGroup color=\"white\" aria-label=\"position\" row>\r\n                <FormControlLabel\r\n                    id=\"myCheck\"\r\n                    value=\"start\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Completed?\"\r\n                    labelPlacement=\"top\"\r\n                    onClick={() => click()}\r\n                    checked={checked}\r\n                />\r\n            </FormGroup>\r\n        </FormControl>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CompInput from './CompInput'\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function Input(props){\r\n\r\n    const { handleKeyPress, input, setinput, isComp, comp, addToList } =  props;\r\n\r\n    return(\r\n        <Grid onKeyPress={handleKeyPress} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <form noValidate autoComplete=\"off\">\r\n                <TextField required value={input} onChange={(event) => setinput(event.target.value)} id=\"todo-text\" label=\"Todo\" variant=\"filled\" />\r\n            </form>\r\n            <CompInput click={isComp} checked={comp} />\r\n            <Box margin=\"18px\" display=\"flex\" justifyContent=\"center\" alignContent=\"center\">\r\n                <Button size=\"large\" onClick={addToList} variant=\"contained\" color=\"primary\">Add Item</Button>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Titlebar from './components/Titlebar';\nimport CompInput from './components/CompInput'\nimport Input from './components/Input'\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n  },\n  paper: {\n    width: 300,\n    textAlign: 'center',\n    color: theme.palette.text.dark,\n    background: 'gray',\n    margin: '5px',\n    padding: '5px',\n  },\n}));\n\n\nexport default function App() {\n\n  const [list, setlist] = useState(\n    localStorage.getItem(\"storedList\") !== null ? JSON.parse(localStorage.getItem(\"storedList\")) : []\n  );\n  const [input, setinput] = useState(\"\");\n  const [comp, setcomp] = useState(false);\n  const [id, setid] = useState(\n    list.length === 0 ? 1 : list[list.length - 1].id + 1\n  );\n\n  useEffect(() => {\n    function store() {\n      let jsonList = JSON.stringify(list);\n      if (typeof (Storage) !== \"undefined\") {\n        localStorage.setItem(\"storedList\", jsonList);\n      }\n    }\n\n    store();\n  }, [list]);\n\n  function addToList() {\n    if (list.some(x => x.task === input)) {\n      alert(\"Cannot have duplicate items!\");\n    }\n    else if (input.length !== 0) {\n      let temp = list.concat({ 'task': input, 'isCompleted': comp, 'id': id });\n      setinput(\"\");\n      setlist(temp);\n      setid(id + 1);\n      setcomp(false);\n    }\n    else {\n      alert(\"Your item needs a name!\");\n    }\n  }\n\n  function isComp() {\n    setcomp(!comp);\n  }\n\n  function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      addToList();\n      e.preventDefault();\n    }\n  }\n\n  function deleteItem(task) {\n    const newList = list.filter((item) => item.task !== task);\n    setlist(newList);\n  }\n\n  function updateComps(id) {\n    const index = list.findIndex(task => task.id === id);\n    let newList = list.slice();\n    newList[index].isCompleted = !newList[index].isCompleted;\n    setlist(newList);\n  }\n\n  const classes = useStyles();\n\n  return (\n    <div style={{ backgroundColor: \"#424242\"}} >\n      <Titlebar />\n      <Input handleKeyPress={handleKeyPress} input={input} setinput={setinput} isComp={isComp} comp={comp} addToList={addToList} />\n      <div className={classes.root}>\n          {list.map(listItem =>\n            <Grid container  direction=\"row\" justify=\"center\" alignItems=\"center\" textAlign=\"center\" key={listItem.id} >\n              <Box width=\"500px\" bgcolor=\"gray\" borderRadius=\"5px\" margin=\"5px\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" > \n                <Grid item>\n                  <Box padding=\"5px\" margin=\"5px\" >{listItem.task}</Box>\n                </Grid>\n                <Grid item>\n                  <Checkbox color=\"primary\" onClick={() => updateComps(listItem.id)} checked={listItem.isCompleted} />\n                </Grid>\n                <Grid item>\n                  <Button alignSelf=\"flex-end\" onClick={() => deleteItem(listItem.task)} variant=\"contained\" color=\"secondary\" >Delete</Button>\n                </Grid>\n              </Box> \n            </Grid>)}\n      </div>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}